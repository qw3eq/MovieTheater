{"ast":null,"code":"var _jsxFileName = \"/Users/nikolayrozum/Desktop/Resume Projects/FreeMovies/MovieTheater/client/src/components/Search/Search.jsx\";\nimport React, { Component } from 'react';\nimport './Search.scss';\nimport Suggestions from './Suggestions';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeRequest = async query => {\n      let rawResults = await fetch(`http://localhost:6969/searchMovie?query=${query}`);\n      let results = await rawResults.json();\n      return results;\n    };\n\n    this.onChangeHandler = async e => {\n      let input = e.target.value;\n\n      if (input.length > 2) {\n        this.setState({\n          isShown: true\n        });\n        let suggestions = await this.makeRequest(input);\n\n        if (suggestions !== this.state.suggestions) {\n          this.setState({\n            suggestions\n          });\n        }\n      }\n\n      if (input.length <= 2) {\n        this.setState({\n          isShown: false\n        });\n      }\n    };\n\n    this.state = {\n      suggestions: [],\n      isShown: false\n    };\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.setState({\n        isShown: false,\n        suggestions: []\n      });\n    }\n  }\n\n  render() {\n    let list = this.state.suggestions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Suggestions, {\n      list: list,\n      show: this.state.isShown,\n      ref: this.setWrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/nikolayrozum/Desktop/Resume Projects/FreeMovies/MovieTheater/client/src/components/Search/Search.jsx"],"names":["React","Component","Suggestions","Search","constructor","props","makeRequest","query","rawResults","fetch","results","json","onChangeHandler","e","input","target","value","length","setState","isShown","suggestions","state","bind","setWrapperRef","handleClickOutside","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","node","wrapperRef","event","contains","render","list"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './Search.scss';\n\nimport Suggestions from './Suggestions';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            suggestions: [],\n            isShown: false,\n        }\n\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    makeRequest = async (query) => {\n        let rawResults = await fetch(`http://localhost:6969/searchMovie?query=${query}`);\n        let results = await rawResults.json();\n\n        return results;\n    }\n\n\n    onChangeHandler = async (e) => {\n        let input = e.target.value;\n\n        if(input.length > 2) {\n            this.setState({ isShown: true });\n\n            let suggestions = await this.makeRequest(input);\n            \n            if(suggestions !== this.state.suggestions) {\n                this.setState({suggestions})\n            }\n        }\n        if(input.length <= 2) {\n            this.setState({ isShown: false })\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n          this.setState({\n              isShown: false,\n              suggestions: [],\n          })\n        }\n    }\n\n    render() {\n        let list = this.state.suggestions;\n\n        return (\n            <div className=\"search\">\n                <input \n                type=\"text\" \n                placeholder=\"Search...\"\n                onChange={this.onChangeHandler}\n                />\n                <Suggestions \n                list={list} \n                show={this.state.isShown}\n                ref={this.setWrapperRef}\n                /> \n            </div>\n        )\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}